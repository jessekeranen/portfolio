package portfolio.test;
// Generated by ComTest BEGIN
import java.util.Arrays;
import java.io.*;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFRow;
import portfolio.Company;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.util.Locale;
import static org.junit.Assert.*;
import org.junit.*;
import portfolio.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.09.13 22:21:01 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class CompanyTest {


  // Generated by ComTest BEGIN  // Company: 13

  private Company Nokia; 


  public void exampleCompany() {
  String filename = "/Users/jessekeranen/CompanyTest.xlsx" ; 
  XSSFWorkbook workbook = new XSSFWorkbook(); 
  XSSFSheet sheet = workbook.createSheet("Prices"); 
  XSSFSheet sheet2 = workbook.createSheet("MarketValues"); 
  XSSFSheet sheet3 = workbook.createSheet("BookValues"); 
  XSSFSheet sheet4 = workbook.createSheet("Dividends"); 

  XSSFRow row = sheet.createRow(0); 
  row.createCell(0).setCellValue("Nokia"); 
  for(int i = 1; i < 13; i++){
       row = sheet.createRow(i); 
       row.createCell(0).setCellValue(i*11.05+i-i*i); 
  }

  XSSFRow row2 = sheet2.createRow(0); 
  row2.createCell(0).setCellValue("Nokia"); 
  for(int i = 1; i < 13; i++){
       row2 = sheet2.createRow(i); 
       row2.createCell(0).setCellValue(1*11.05-i*i); 
  }

  XSSFRow row3 = sheet3.createRow(0); 
  row3.createCell(0).setCellValue("Nokia"); 
  for(int i = 1; i < 13; i++){
       row3 = sheet3.createRow(i); 
       row3.createCell(0).setCellValue(1*11.05-i*i); 
  }

  XSSFRow row4 = sheet4.createRow(0); 
  row4.createCell(0).setCellValue("Nokia"); 
  for(int i = 1; i < 13; i++){
       row4 = sheet4.createRow(i); 
       row4.createCell(0).setCellValue(1*11.05-i*i); 
  }

   try{
   FileOutputStream fileOut = new FileOutputStream(filename); 
   workbook.write(fileOut); 
   fileOut.close(); 
   workbook.close(); 
   }catch( Exception e) {
        System.err.println(e.getMessage()); 
   }

  Nokia = new Company(sheet, sheet2, sheet3, sheet4, 0); 
  }
  // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testReturns153 
   * @throws Exception when error
   */
  @Test
  public void testReturns153() throws Exception {    // Company: 153
    exampleCompany(); 
    assertEquals("From: Company line: 160", "Nokia", Nokia.name); 
    assertEquals("From: Company line: 161", 12, Nokia.returns.length); 
    double[] array = Nokia.returns; 
    DecimalFormatSymbols symbols = new DecimalFormatSymbols(Locale.US); 
    DecimalFormat decimalFormat = new DecimalFormat("0.00", symbols); 
    for (int i = 0; i < array.length; i++) {
    array[i] = Double.valueOf(decimalFormat.format(array[i])); 
    }
    assertEquals("From: Company line: 168", "[0.0, 0.82, 0.35, 0.19, 0.09, 0.03, -0.03, -0.08, -0.15, -0.25, -0.44, -0.95]", Arrays.toString(array)); 
  } // Generated by ComTest END
}